
## INIT

### JS

```
npm init
npm run build
```

### Play

```
sbt gen-models # Modelクラス自動生成
sbt run
```


## システム情報

### JS

| ツール | 役割 | 補足 |
|:---|:---|:---|
| rollup | ビルドツール |  |
|  |  |  |
|  |  |  |
|  |  |  |
|  |  |  |
|  |  |  |

### Play

| ツール | 役割 | 補足 |
|:---|:---|:---|
| play-slick | ORマッパ |  |
| play-slick-evolutions | テーブル定義とDBテーブルの自動同期 |  |
| slick-codegen | テーブル定義からモデルを自動作成 |  |
|  |  |  |
|  |  |  |
|  |  |  |

### バージョン

| ツール | バージョン | 補足 |
|:---|:---|:---|
| Play | 2.5.10 |  |
| SBT | 0.13.11 |  |
| Riot | 3.6.1 |  |
| Play-slick | 2.1.0 |  |
| Slick | 3.2.0 |  |
|  |  |  |
|  |  |  |

## 参考情報

### Slick

- http://krrrr38.github.io/slick-doc-ja/v3.0.out/ORM%E3%81%8B%E3%82%89Slick%E3%82%92%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B%E4%BA%BA%E3%81%B8.html


## 開発コマンド

### H2

| 操作 | コマンド | 補足 |
|:---|:---|:---|
| コンソール | `sbt h2-browser` |  |
|  |  |  |

### Play

| 操作 | コマンド | 補足 |
|:---|:---|:---|
| ウォッチ | `sbt ~compile` |  |
| 実行 | `sbt run` | ウォッチコマンドを別ターミナルにて実行しておくと良い |
|  |  |  |
|  |  |  |

### JS

| 操作 | コマンド | 補足 |
|:---|:---|:---|
| ウォッチ | `npm run w` |  |
|  |  |  |
|  |  |  |
|  |  |  |
|  |  |  |



This is your new Play application
=================================

This file will be packaged with your application when using `activator dist`.

There are several demonstration files available in this template.

Controllers
===========

- HomeController.scala:

  Shows how to handle simple HTTP requests.

- AsyncController.scala:

  Shows how to do asynchronous programming when handling a request.

- CountController.scala:

  Shows how to inject a component into a controller and use the component when
  handling requests.

Components
==========

- Module.scala:

  Shows how to use Guice to bind all the components needed by your application.

- Counter.scala:

  An example of a component that contains state, in this case a simple counter.

- ApplicationTimer.scala:

  An example of a component that starts when the application starts and stops
  when the application stops.

Filters
=======

- Filters.scala:

  Creates the list of HTTP filters used by your application.

- ExampleFilter.scala

  A simple filter that adds a header to every response.